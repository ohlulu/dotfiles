#!/usr/bin/env zsh

alias gg='git --git-dir ~/.dotfiles/.git --work-tree=$HOME'
alias ggc='gg commit -m'

batdiff() {
    git diff --name-only --diff-filter=d | xargs bat --diff
}

ggsync() {
    gg pull
    gg status | grep "modified" | awk '{$1=""; print $0}' | sed 's/^[ \t]*//' | while read -r file; do
        gg add -f "$file"
    done
    if [ -n "$(gg status -s)" ]; then
        echo
        gg commit -m "sync"
        gg push
    fi
}

sync_repos() {
    local repo_path=$1
    if [ -z "$repo_path" ] || [ ! -d "$repo_path" ]; then
        echo "Error: Repository path not provided or invalid: $repo_path" >&2
        return 1
    fi

    echo "Syncing $(basename "$repo_path")..."
    cd "$repo_path" || return 1
    git pull
    git add .
    if [ -n "$(git status -s)" ]; then
        echo "  Committing changes..."
        git commit -m "sync"
        echo "  Pushing changes..."
        git push
    else
        echo "  No changes to commit."
    fi
    cd - > /dev/null # Go back to previous directory silently
}

workout() {
    echo "≫ Sync dotfiles..."
    # Run ggsync in background and prefix output
    (ggsync 2>&1 | sed 's/^/    [ggsync] /') &

    # Define the list of repositories to sync
    local repos_to_sync=(
        ~/Developer/ohlulu/scripts
        ~/Developer/ohlulu/playground
        # Add more repo paths here in the future
    )

    echo "≫ Syncing repositories..."
    for repo_path in "${repos_to_sync[@]}"; do
        # Run sync_repos in background and prefix output with repo name
        (sync_repos "$repo_path" 2>&1 | sed "s/^/    [$(basename "$repo_path")] /") &
    done

    # Wait for all background jobs to finish
    wait

    echo "✓ Sync done"
}