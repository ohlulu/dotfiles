#!/bin/bash

alias gg='git --git-dir ~/.dotfiles/.git --work-tree=$HOME'
alias ggc='gg commit -m'

batdiff() {
    git diff --name-only --diff-filter=d | xargs bat --diff
}

ggsync() {
    gg pull
    gg status | grep "modified" | awk '{$1=""; print $0}' | sed 's/^[ \t]*//' | while read -r file; do
        gg add -f "$file"
    done
    gg commit -m "sync"
    gg push
}

workout() {
    ggsync
    paths=(
        ~/Developer/SHOPLINE/api.shoplineapp.com
    )
    
    for path in "${paths[@]}"; do
        # Remove trailing comma if present
        path=${path%,}
        
        if [ -d "$path" ]; then
            echo "Checking $path"
            cd "$path" || continue
            echo "Current path: $(pwd)"
            
            # Check for uncommitted changes
            if [[ -n $(git status --porcelain) ]]; then
                echo "⚠️  Uncommitted changes"
                git status -s
            fi
            
            # Check for unpushed commits
            local_branch=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
            if [ -z "$local_branch" ]; then
                echo "⚠️  Unable to determine current branch in $path"
                echo ""
                continue
            fi
            
            # Try to get remote branch info
            remote_info=$(git rev-parse --abbrev-ref --symbolic-full-name @{u} 2>/dev/null)
            if [ $? -ne 0 ]; then
                echo "⚠️  Branch $local_branch in $path has no upstream branch"
            else
                ahead=$(git rev-list --count @{u}..HEAD 2>/dev/null)
                if [ $ahead -gt 0 ]; then
                    echo "⚠️  Branch $local_branch in $path is ahead of $remote_info by $ahead commit(s)"
                fi
            fi
            
            echo ""
        else
            echo "⚠️  Path not found: $path"
        fi
    done
}