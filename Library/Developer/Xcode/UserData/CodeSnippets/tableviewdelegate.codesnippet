<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>tableviewdelegate</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>All</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>// MARK: - UITableViewDelegate

extension &lt;#ViewContorller#&gt;: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        tableView.deselectRow(at: indexPath, animated: true)
    }
}

// MARK: - UITableViewDataSource

extension &lt;#ViewContorller#&gt;: UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -&gt; Int {
        return &lt;#Int#&gt;
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -&gt; Int {
        return &lt;#Int#&gt;
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -&gt; UITableViewCell {
        let model = viewModel.cellProvider(at: indexPath)
        let cell = tableView.dequeueReusableCell(withIdentifier: model.cellID, for: indexPath)
        if let cell = cell as? CellConfigurable {
            cell.configCell(with: model)
        }
        return cell
    }
}</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>7D828068-7C82-4223-9945-49FF04C69F56</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Swift</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>extension delegate and datasource</string>
	<key>IDECodeSnippetTitle</key>
	<string>UITableView delegate &amp; datasource with extension</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
